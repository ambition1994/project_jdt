#jdt所对应的数据库实例
jdt.database.instance=jdt
#wfs所对应的数据库实例
wfs.database.instance=wfs
# 最小连接数
jdbc.minPoolSize=1
# 最大连接数
jdbc.maxPoolSize=15
# 初始化时连接数
jdbc.initialPoolSize=3
# 获取连接时最大等待时间，单位毫秒
jdbc.maxWait=60000
# 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
jdbc.testWhileIdle=true
# 用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
jdbc.validationQuery=SELECT 1
# 有两个含义：1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
jdbc.timeBetweenEvictionRunsMillis=60000
# 连接保持空闲而不被驱逐的最长时间
jdbc.minEvictableIdleTimeMillis=300000
# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
jdbc.testOnBorrow=false
# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
jdbc.testOnReturn=false
# 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
jdbc.poolPreparedStatements=false
# 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
jdbc.maxOpenPreparedStatements=-1
# 属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat 日志用的filter:log4j 防御sql注入的filter:wall
jdbc.filters=stat
connection.properties=config.decrypt=true;config.decrypt.key=${publickey}
publickey=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALjXT3COwkd9ajjO/fWZ/fhYr8Y6JjkOuLsRmiEX+SNPppMMpmpKUczg6+kwejr6jAhZSyAbep/JCaN5EHjwcqUCAwEAAQ==
#################################################################################
## 取得连接的同时将校验连接的有效性
#jdbc.testConnectionOnCheckin=false
#
## 测试表，c3p0 自动创建
#jdbc.automaticTestTable=t_autotest
## 当连接耗尽时，增加连接数
#jdbc.acquireIncrement = 3
#
## 最大空闲时间,一个连接可以有多少秒不被使用
#jdbc.maxIdleTime = 60
## 强迫连接池扑杀任何的连接时间大于设置的连接
#jdbc.maxConnectionAge = 180
#
## 全局的PreparedStatements缓存的大小。
## 如果maxStatements与maxStatementsPerConnection均为0，则缓存不生效，只要有一个不为0，则语句的缓存就能生效。
#jdbc.maxStatements=0
## 定义了连接池内单个连接所拥有的最大缓存statements数。默认值: 0
#jdbc.maxStatementsPerConnection=0
#
## 多线程实现多个操作同时被执行
#jdbc.numHelperThreads=3
## 从数据库获取新连接失败后重复尝试的次数。默认值: 30 ；小于等于0表示无限次
#jdbc.acquireRetryAttempts = 30
## 重新尝试的时间间隔，默认为：1000毫秒
#jdbc.acquireRetryDelay = 1000
## 每隔X秒检查所有连接池中的空闲连接,默认值: 0，不检查
#jdbc.idleConnectionTestPeriod = 60
## 当连接池连接耗尽时，客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException，如设为0则无限期等待。单位毫秒
#jdbc.checkoutTimeout=0
## 关闭连接时，是否提交未提交的事务，默认为false，即关闭连接，回滚未提交的事务
#jdbc.autoCommitOnClose = false
